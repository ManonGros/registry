<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.gbif.identity.mybatis.UserMapper" >

  <resultMap id="USER_MAP" type="User" >
    <id column="username" property="userName" />
    <result column="email" property="email" />
    <result column="first_name" property="firstName" />
    <result column="last_name" property="lastName" />
    <result column="password" property="passwordHash" />
    <result column="roles" property="roles" typeHandler="org.gbif.identity.mybatis.UserRoleTypeHandler"/>
    <result column="settings" property="settings" typeHandler="org.gbif.identity.mybatis.SettingsTypeHandler"/>
    <result column="last_login" property="lastLogin" />
  </resultMap>

  <sql id="WRITABLE_USER_FIELDS">
    username,first_name,last_name,email,password,roles,settings,created
  </sql>

  <sql id="USER_FIELDS">
    u.username,u.first_name,u.last_name,u.email,u.password,u.roles,u.settings
  </sql>

  <sql id="WRITABLE_USER_FIELD_TYPES">
    #{userName,jdbcType=VARCHAR},
    #{firstName,jdbcType=VARCHAR},
    #{lastName,jdbcType=VARCHAR},
    #{email,jdbcType=VARCHAR},
    #{passwordHash,jdbcType=VARCHAR},
    #{roles,jdbcType=OTHER,typeHandler=org.gbif.identity.mybatis.UserRoleTypeHandler},
    #{settings,jdbcType=OTHER,typeHandler=org.gbif.identity.mybatis.SettingsTypeHandler}::hstore,
    now() <!-- created -->
  </sql>

  <sql id="USER_UPDATE">
    first_name = #{firstName,jdbcType=VARCHAR},
    last_name = #{lastName,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    password = #{passwordHash,jdbcType=VARCHAR},
    roles = #{roles,jdbcType=OTHER,typeHandler=org.gbif.identity.mybatis.UserRoleTypeHandler},
    settings = #{settings,jdbcType=OTHER,typeHandler=org.gbif.identity.mybatis.SettingsTypeHandler}::hstore
  </sql>

  <sql id="SIMPLE_SEARCH">
    WHERE
      u.last_name ILIKE '%' || #{query} || '%' OR
      u.first_name ILIKE '%' || #{query} || '%' OR
      u.email ILIKE '%' || #{query} || '%' OR
      u.username ILIKE '%' || #{query} || '%'
  </sql>

  <!-- Basic paging search functionality -->
  <select id="search" resultMap="USER_MAP">
    SELECT <include refid="USER_FIELDS"/>
    FROM public.user u
    <if test="query != null" > <include refid="SIMPLE_SEARCH"/> </if>
    ORDER BY u.last_name, u.first_name, u.username
    <if test="page != null" >
      LIMIT #{page.limit} OFFSET #{page.offset}
    </if>
  </select>

  <select id="count" resultType="Integer" parameterType="map">
    SELECT COUNT(*)
    FROM public.user u <if test="query != null" > <include refid="SIMPLE_SEARCH"/> </if>
  </select>

  <insert id="create" parameterType="User" useGeneratedKeys="true" keyProperty="key">
    INSERT INTO public.user(<include refid="WRITABLE_USER_FIELDS"/>)
    VALUES(<include refid="WRITABLE_USER_FIELD_TYPES"/>)
  </insert>

  <!--  Note: you can't get deleted users -->
  <select id="get" resultMap="USER_MAP" parameterType="java.lang.String">
    SELECT <include refid="USER_FIELDS"/>
    FROM public.user u
    WHERE u.username = #{x} AND u.deleted IS NULL
  </select>

  <select id="getByKey" resultMap="USER_MAP" parameterType="java.lang.Integer">
    SELECT <include refid="USER_FIELDS"/>
    FROM public.user u
    WHERE u.key = #{x} AND u.deleted IS NULL
  </select>

  <select id="getByEmail" resultMap="USER_MAP" parameterType="java.lang.String">
    SELECT <include refid="USER_FIELDS"/>
    FROM public.user u
    WHERE u.email = #{x} AND u.deleted IS NULL
  </select>

  <update id="update" parameterType="User">
    UPDATE public.user
    SET <include refid="USER_UPDATE"/>
    WHERE username = #{userName,jdbcType=VARCHAR}
  </update>

  <select id="delete" parameterType="java.lang.String">
    UPDATE public.user
    SET deleted = now()
    WHERE username = #{x} AND deleted IS NULL
  </select>

  <select id="getBySession" resultMap="USER_MAP" parameterType="java.lang.String">
    SELECT <include refid="USER_FIELDS"/>
    FROM public.user u JOIN session s ON u.username = s.username
    WHERE s.session = #{x}
  </select>

  <select id="getChallengeCode" resultType="UUID" parameterType="java.lang.Integer">
    SELECT challenge_code
    FROM public.user u
    WHERE u.key = #{x}
  </select>

  <update id="setChallengeCode">
    UPDATE public.user
    SET challenge_code = #{challengeCode,jdbcType=OTHER}
    WHERE key = #{key}
  </update>

</mapper>
